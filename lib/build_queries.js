#!/usr/bin/node

const path = require('path')
const moment = require('moment')
const process = require('process')
const { createTableJoinQueriesAndTypeDef } = require('./helpers/sql-helpers')
const { writeFile } = require('./helpers/io-helpers')
const {
  readTablesDef,
  stringSaneFunction,
  createTableQueriesAndTypeDef,
  killConnection
} = require('./helpers/sql-helpers')

/**
 *
 */
async function run (outputFile, customJoins = []) {
  try {
    const filepath = path.join(process.cwd(), outputFile)
    console.log(`======================================================
Updating javascript sql functions file '${filepath}'
======================================================`)
    const javascriptFragments = [
            `/**
 * PROGRAMMATICALLY GENERATED BY build_queries.js
 * DO NOT EDIT MANUALLY !
 * UPDATED: ${moment()}
 */`,
            'const _ = require("lodash");',
            stringSaneFunction()
    ]
    const database = 'test'
    // build standard CRUD for each table
    const tables = await readTablesDef(database)
    for (const table of tables) {
      const results = await createTableQueriesAndTypeDef(database, table)
      javascriptFragments.push(results.query)
    }
    for (const customJoin of customJoins) {
      const results = await createTableJoinQueriesAndTypeDef(
        database,
        customJoin.table,
        customJoin.joinColumn,
        customJoin.joinTable,
        customJoin.postFix
      )
      javascriptFragments.push(results.query)
    }
    //
    const jsContents = javascriptFragments.join('\n')
    console.log(`Creating file '${filepath}'`)
    await writeFile(filepath, jsContents)
  } finally {
    // always close the resource
    await killConnection()
  }
}

module.exports = {
  run
}
